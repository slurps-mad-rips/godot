include_guard(GLOBAL)

include(CMakePushCheckState)
include(CheckTypeSize)

function (check_type_exists type variable)
  set(option QUIET BUILTIN_ONLY)
  set(single LANGUAGE)
  set(multi FLAGS DEFINITIONS INCLUDES LIBRARIES HEADERS)
  cmake_parse_arguments(ARG "${option}" "${single}" "${multi}" ${ARGN})

  cmake_push_check_state()
  set(CMAKE_REQUIRED_DEFINITIONS ${ARG_DEFINITIONS})
  set(CMAKE_REQUIRED_LIBRARIES ${ARG_LIBRARIES})
  set(CMAKE_REQUIRED_INCLUDES ${ARG_INCLUDES})
  set(CMAKE_REQUIRED_FLAGS ${ARG_FLAGS})
  set(CMAKE_REQUIRED_QUIET OFF)
  set(CMAKE_EXTRA_INCLUDE_FILES ${ARG_HEADERS})
  if (ARG_QUIET)
    set(CMAKE_REQUIRED_QUIET ON)
  endif()
  if (ARG_BUILTIN_ONLY)
    set(ARG_BUILTIN BUILTIN_TYPES_ONLY)
  endif()
  if (ARG_LANGUAGE)
    set(ARG_LANGUAGE LANGUAGE ${ARG_LANGUAGE})
  endif()
  check_type_size(${type} ${variable} ${ARG_BUILTIN} ${ARG_LANGUAGE})
  cmake_pop_check_state()
  set(${variable} ${${variable}} PARENT_SCOPE)
endfunction ()
